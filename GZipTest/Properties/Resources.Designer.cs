//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GZipTest.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GZipTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attempting to insert an element after an ending work item.
        /// </summary>
        internal static string ErrAttemptingInsertAnElementAfterEnding {
            get {
                return ResourceManager.GetString("ErrAttemptingInsertAnElementAfterEnding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The drive specified in path is invalid..
        /// </summary>
        internal static string ErrDriveNotFound {
            get {
                return ResourceManager.GetString("ErrDriveNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The end of stream was not be found..
        /// </summary>
        internal static string ErrEndOfStream {
            get {
                return ResourceManager.GetString("ErrEndOfStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file can not be loaded..
        /// </summary>
        internal static string ErrFileLoad {
            get {
                return ResourceManager.GetString("ErrFileLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file or dictionary already exists..
        /// </summary>
        internal static string ErrFileOrDictionaryAlreadyExists {
            get {
                return ResourceManager.GetString("ErrFileOrDictionaryAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Arguments set incorrectly..
        /// </summary>
        internal static string ErrInvalidArgs {
            get {
                return ResourceManager.GetString("ErrInvalidArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на First work item is not of type WorkItemBaseStart.
        /// </summary>
        internal static string ErrlnvaidTypeOfFirstWorkItem {
            get {
                return ResourceManager.GetString("ErrlnvaidTypeOfFirstWorkItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Last work item is not of type WorkItemBaseEnd..
        /// </summary>
        internal static string ErrlnvaidTypeOfLastWorkItem {
            get {
                return ResourceManager.GetString("ErrlnvaidTypeOfLastWorkItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Work items have no item of type WorkItemBaseEnd..
        /// </summary>
        internal static string ErrNoAnyWorkItemBaseEnd {
            get {
                return ResourceManager.GetString("ErrNoAnyWorkItemBaseEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Work items have no item of type WorkItemBaseStart..
        /// </summary>
        internal static string ErrNoAnyWorkItemBaseStart {
            get {
                return ResourceManager.GetString("ErrNoAnyWorkItemBaseStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not enough disk space.
        /// </summary>
        internal static string ErrNotEnoughDiskSpace {
            get {
                return ResourceManager.GetString("ErrNotEnoughDiskSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file or directory cannot be found..
        /// </summary>
        internal static string ErrNotFoundFileOrDirectory {
            get {
                return ResourceManager.GetString("ErrNotFoundFileOrDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Out of Memory.
        /// </summary>
        internal static string ErrOutOfMemory {
            get {
                return ResourceManager.GetString("ErrOutOfMemory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The path exceeds the maxium supported path length..
        /// </summary>
        internal static string ErrPathTooLong {
            get {
                return ResourceManager.GetString("ErrPathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Work items have not to contain more than one element of type WorkItemBaseEnd.
        /// </summary>
        internal static string ErrSeveralEndWorkItems {
            get {
                return ResourceManager.GetString("ErrSeveralEndWorkItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Work items have not to contain more than one element of type WorkItemBaseStart.
        /// </summary>
        internal static string ErrSeveralStartWorkItems {
            get {
                return ResourceManager.GetString("ErrSeveralStartWorkItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на There is a sharing violation..
        /// </summary>
        internal static string ErrSharingViolation {
            get {
                return ResourceManager.GetString("ErrSharingViolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Denied permissions to file access..
        /// </summary>
        internal static string ErrUnauthorizedAccess {
            get {
                return ResourceManager.GetString("ErrUnauthorizedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &gt;GZipTest.exe
        ///&gt;GZipTest.exe /?
        ///Displays this help.
        ///
        ///&gt;GZipTest.exe compress &lt;path to the source file&gt; [&lt;path to the result file&gt;]
        ///Compresses the source file and writes the result to the resulting file.
        ///If &lt;path to the result file&gt; is not specified, the resulting file is created in the same directory as the source file with adding the extension &quot;.gz&quot;.
        ///
        ///&gt;GZipTest.exe decompress &lt;path to the source file&gt; &lt;path to the result file&gt;
        ///Decompresses the source file and writes the result to the resulting file. [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test task for Veeam made by Igor Gubin 02.2020..
        /// </summary>
        internal static string HelpHeader {
            get {
                return ResourceManager.GetString("HelpHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An IO exception occurred: {0}.
        /// </summary>
        internal static string TmplateErrIOHresult {
            get {
                return ResourceManager.GetString("TmplateErrIOHresult", resourceCulture);
            }
        }
    }
}
